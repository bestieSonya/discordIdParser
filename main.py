import asyncio
import discord
import requests

intents = discord.Intents.all()
client = discord.Client(intents=intents)

DISCORD_SENSOR_API = "https://discord-sensor.com/api/functions/get-role-members"

def get_role_members(source_guild_id: str, role_id: str, page: int = 1, limit: int = 1000):
    url = f"{DISCORD_SENSOR_API}/{source_guild_id}/{role_id}"
    params = {"page": page, "limit": limit}
    headers = {"Accept": "application/json"}

    try:
        response = requests.get(url, params=params, headers=headers)
        response.raise_for_status()
        return response.json()
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ API –∑–∞–ø—Ä–æ—Å–∞: {e}")
        return None


@client.event
async def on_ready():
    if client.user:
        print(f"‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∫–∞–∫ {client.user} ({client.user.id})")


@client.event
async def on_message(message):
    if message.author == client.user:
        return

    if message.content.startswith("$start"):
        args = message.content.split()
        if len(args) != 4:
            await message.channel.send("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã.\n–ü—Ä–∏–º–µ—Ä: `$start <source_guild_id> <role_id> <role_name>`")
            return

        source_guild_id = args[1]
        role_id = args[2]
        role_name = args[3]

        await message.channel.send(f"–ü–æ–ª—É—á–∞—é —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Ä–æ–ª–∏ `{role_name}` –∏–∑ –≥–∏–ª—å–¥–∏–∏ `{source_guild_id}`...")

        target_guild = message.guild
        if not target_guild:
            await message.channel.send("–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≥–∏–ª—å–¥–∏—é –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è.")
            return

        data = get_role_members(source_guild_id, role_id)
        if not data or not data.get("success"):
            await message.channel.send("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Ä–æ–ª–∏.")
            return

        users = data.get("users", [])
        if not users:
            await message.channel.send("–ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —ç—Ç–æ–π —Ä–æ–ª–∏.")
            return

        await message.channel.send(f"–ù–∞–π–¥–µ–Ω–æ {len(users)} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤. –°–æ–∑–¥–∞—é –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ –∫–∞–Ω–∞–ª—ã...")

        group_size = 50
        user_groups = [users[i:i + group_size] for i in range(0, len(users), group_size)]

        for index, group in enumerate(user_groups, start=1):
            suffix = f"_{index}" if len(user_groups) > 1 else ""
            category_name = f"role-{role_name}{suffix}"

            category = discord.utils.get(target_guild.categories, name=category_name)
            if not category:
                category = await target_guild.create_category_channel(category_name)
                print(f"–°–æ–∑–¥–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è: {category_name}")
            else:
                print(f"–ö–∞—Ç–µ–≥–æ—Ä–∏—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {category_name}")

            for user_data in group:
                try:
                    user_id = int(user_data["id"])
                    username = user_data.get("username", "user")

                    member = target_guild.get_member(user_id)
                    channel_name = f"{username}-{user_id}"

                    existing_channel = discord.utils.get(category.text_channels, name=channel_name)
                    if existing_channel:
                        print(f"üîÑ –ö–∞–Ω–∞–ª —É–∂–µ –µ—Å—Ç—å: {channel_name}")
                        continue

                    overwrites = {
                        target_guild.default_role: discord.PermissionOverwrite(view_channel=False),
                    }
                    if member:
                        overwrites[member] = discord.PermissionOverwrite(view_channel=True, send_messages=True)
                    else:
                        print(f"‚ö†Ô∏è –£—á–∞—Å—Ç–Ω–∏–∫ {user_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.")

                    channel = await target_guild.create_text_channel(
                        name=channel_name,
                        category=category,
                        overwrites=overwrites,
                        reason=f"–ö–∞–Ω–∞–ª –¥–ª—è {username} –∏–∑ —Ä–æ–ª–∏ {role_id}",
                    )
                    print(f"‚úÖ –°–æ–∑–¥–∞–Ω –∫–∞–Ω–∞–ª: {channel.name}")

                    msg = await channel.send(
                        f"https://discord-tracker.com/tracker/user/{user_id}\n"
                        f"https://discord-sensor.com/members/{user_id}"
                    )
                    await msg.edit(suppress=True)

                    await asyncio.sleep(1)
                except Exception as e:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–∞–Ω–∞–ª–∞ –¥–ª—è {user_data}: {e}")

        await message.channel.send(f"‚úÖ –í—Å–µ –∫–∞–Ω–∞–ª—ã –¥–ª—è `{role_name}` —Å–æ–∑–¥–∞–Ω—ã. –ö—Ç–æ –Ω–µ –≤–æ—Ä–∫–∞–µ—Ç ‚Äî —Ç–æ—Ç –ª–æ—Ö üêí")

if __name__ == "__main__":
    TOKEN = ""
    client.run(TOKEN)
    print("Debug ########### bot started")
